DATABASE CREATION , TABLE CREATION ,DATA INSERT 
show databases;
create database udemy_bookstore;
use  udemy_bookstore;
Select database();
CREATE TABLE books 
	(
		book_id INT NOT NULL AUTO_INCREMENT,
		title VARCHAR(100),
		author_fname VARCHAR(100),
		author_lname VARCHAR(100),
		released_year INT,
		stock_quantity INT,
		pages INT,
		PRIMARY KEY(book_id)
	);
desc books;
INSERT INTO books (title, author_fname, author_lname, released_year, stock_quantity, pages)
VALUES
('The Namesake', 'Jhumpa', 'Lahiri', 2003, 32, 291),
('Norse Mythology', 'Neil', 'Gaiman',2016, 43, 304),
('American Gods', 'Neil', 'Gaiman', 2001, 12, 465),
('Interpreter of Maladies', 'Jhumpa', 'Lahiri', 1996, 97, 198),
('A Hologram for the King: A Novel', 'Dave', 'Eggers', 2012, 154, 352),
('The Circle', 'Dave', 'Eggers', 2013, 26, 504),
('The Amazing Adventures of Kavalier & Clay', 'Michael', 'Chabon', 2000, 68, 634),
('Just Kids', 'Patti', 'Smith', 2010, 55, 304),
('A Heartbreaking Work of Staggering Genius', 'Dave', 'Eggers', 2001, 104, 437),
('Coraline', 'Neil', 'Gaiman', 2003, 100, 208),
('What We Talk About When We Talk About Love: Stories', 'Raymond', 'Carver', 1981, 23, 176),
("Where I'm Calling From: Selected Stories", 'Raymond', 'Carver', 1989, 12, 526),
('White Noise', 'Don', 'DeLillo', 1985, 49, 320),
('Cannery Row', 'John', 'Steinbeck', 1945, 95, 181),
('Oblivion: Stories', 'David', 'Foster Wallace', 2004, 172, 329),
('Consider the Lobster', 'David', 'Foster Wallace', 2005, 92, 343);
select * from books;

CONCAT OPERATION
select concat(author_fname,' ',author_lname) as author_full_name from books;
select concat_ws('!','hi','bye','hello');
select concat_ws('-',author_fname,author_lname,title) as author_full_name_title from books;

SUBSTRING OPERATION
select substring('Hello World!',1,3);
select substring('Hello World!',7);
select substring('Hello World!',-3);
select substr(title,1,15) from books;

COMBINING CONCAT AND SUBSTRING OPERATIONS
select concat(substring(title,1,10),'...') as short_title from books;
select concat(substring(author_fname,1,1),'.',substring(author_lname,1,1),'.') as short_title from books;

REPLACE OPERATION
SELECT REPLACE('Hello World', 'Hell', '%$#@');
SELECT REPLACE('Hello World', 'l', '7');
SELECT REPLACE('Hello World', 'o', '0');
SELECT REPLACE('HellO World', 'o', '*');
SELECT REPLACE('cheese bread coffee milk', ' ', ' and ')
SELECT REPLACE(title, 'e ', '3') FROM books;
SELECT REPLACE(title, ' ', '-') FROM books;

REVERSE OPERATION
select reverse(upper("Why does my cat look at me with such an anger")) as ReverseStmt;
SELECT CONCAT(author_fname, REVERSE(author_fname)) FROM books;
select * from books;

char length
select char_length('Hey!');
select title, char_length(title) as length from books;

UPPER AND LOWER 
select concat('I love ',upper(title),' !!!') from books;

OTHER STRING FUNCTIONS
INSERT
select insert('Hello Bobby',6,0,' there');
LEFT
select left('omgahahalol!',3);
RIGHT
select right('omgahahalol!',3);
REPEAT
SELECT REPEAT('ha', 4);
TRIM
SELECT TRIM('  pickle  ');
SELECT TRIM(leading '.' from'...pickle...');
SELECT TRIM(trailing '.' from'...pickle...');
SELECT TRIM(both '.' from'...pickle...');

Challenge questions
select reverse(upper('why does my cat look at me with such a hatred'));
select replace(title,' ','->') as title from books;
select author_lname as forwards, reverse(author_lname) as backwards from books;
select concat(upper(author_fname),' ',upper(author_lname)) as 'full name in caps' from books;
select concat(title,' was released in ',released_year) from books;
select title, char_length(title) as 'character_count' from books;
select concat(substr(title,1,10),'...') as 'short title',
concat(author_lname,',',author_fname) as author,
concat(stock_quantity,' in stock') as quantity from books;

ADDING FEW MORE BOOKS IN THE TABLE
INSERT INTO books
    (title, author_fname, author_lname, released_year, stock_quantity, pages)
    VALUES ('10% Happier', 'Dan', 'Harris', 2014, 29, 256), 
           ('fake_book', 'Freida', 'Harris', 2001, 287, 428),
           ('Lincoln In The Bardo', 'George', 'Saunders', 2017, 1000, 367);

DISTINCT
select distinct author_lname from books;
select distinct concat(author_fname,' ',author_lname) from books;
 select distinct author_fname, author_lname from books;

ORDER BY
select * from books order by author_lname;
select book_id, author_fname, author_lname, pages from books order by 2;
select author_lname, released_year, title from books order by author_lname, released_year;

LIMIT 
select title,released_year from books order by released_year desc limit 5;
select title,released_year from books order by released_year desc limit 1,5;
select title,released_year from books order by released_year desc limit 3,2;

LIKE
select title, author_fname, author_lname from books where author_fname like '%da%';
select title, author_fname, author_lname from books where author_fname like '____';
select title, author_fname, author_lname from books where author_fname like '%n';
select title, author_fname, author_lname from books where title like '%\%%';

Challenge
select title from books where title like '%stories';
select title, pages from books order by pages desc limit 1;
select concat(title,'-',released_year) as summary from books order by released_year desc limit 3;
select title , author_lname  from books where author_lname like '% %';
select title , released_year, stock_quantity from books order by stock_quantity limit 3;
select concat(upper('my favorite author is '),upper(author_fname),' ',upper(author_lname)) from books order by author_lname;

COUNT
select count(*) from books;
select count(author_lname) from books;
select count(distinct author_lname) from books;
select count(title) from books where title like "%the%";

GROUP BY
select author_lname, count(*) as books_written from books group by author_lname order by books_written desc; 

MIN and MAX
select min(released_year) from books;
select max(pages) from books;
select max(author_lname) ,min(author_lname) from books;

Sub queries
select * from books where pages = (Select min(pages) from books);
select * from books where released_year = (Select min(released_year) from books);

GROUP BY multiple columns
select author_fname, author_lname, count(*) as books_written from books group by author_fname, author_lname

MIN and MAX with Group by
select author_fname, author_lname, min(released_year) from books group by author_fname, author_lname
select author_fname, author_lname,max(released_year),min(released_year) from books group by author_fname, author_lname
select author_fname, author_lname,max(released_year) as lastest_release,
min(released_year) as earliest_release, count(*) as books_written 
from books group by author_fname, author_lname

SUM
select author_lname, author_fname, sum(pages) as pages_written from books group by author_lname, author_fname order by pages_written;

AVG
select avg(released_year) from books
select avg(pages) from books
select avg(stock_quantity) from books
select released_year,avg(stock_quantity) from books group by released_year

CHALLENGE
select count(*) from books;
select released_year , count(*) as total_books from books group by released_year order by released_year desc;
select sum(stock_quantity) as stock_quantity from books;
select author_fname, author_lname, avg(released_year) from books group by author_fname, author_lname;
select concat(author_fname,' ',author_lname) as full_name from books where pages = (select max(pages) from books); 
select released_year ,count(*) as '#books', avg(pages) as avg_pages from books group by released_year order by released_year 

NOT EQUAL
SELECT * FROM books WHERE released_year != 2017;

NOT LIKE
SELECT * FROM books WHERE title NOT LIKE '%e%';

GREATER THAN
SELECT * FROM books WHERE released_year > 2000;
SELECT * FROM books WHERE pages > 500;

LESS THAN OR EQUAL TO
SELECT * FROM books WHERE pages < 200;
SELECT * FROM books WHERE released_year < 2000;
SELECT * FROM books WHERE released_year <= 1985;

logical AND
select * from books where author_fname = 'Dave'and author_lname = 'Eggers' and released_year > 2010

logical or
select * from books where author_lname = 'Eggers' or released_year > 2010

BETWEEN (inclusive of both the end points)
select * from books where released_year between 2004 and 2015;
select * from books where pages between 208 and 304;

NOT BETWEEN (inclusive of both the end points)
select * from books where pages not between 208 and 304;

COMPARING DATES
SELECT * FROM people WHERE birthtime 
BETWEEN CAST('12:00:00' AS TIME) 
AND CAST('16:00:00' AS TIME);
 
SELECT * FROM people WHERE HOUR(birthtime)
BETWEEN 12 AND 16;

IN AND NOT IN
SELECT title, author_lname FROM books
WHERE author_lname = 'Carver' 
OR author_lname = 'Lahiri'
OR author_lname = 'Smith';
 
SELECT title, author_lname FROM books
WHERE author_lname IN ('Carver', 'Lahiri', 'Smith');
 
SELECT title, author_lname FROM books
WHERE author_lname NOT IN ('Carver', 'Lahiri', 'Smith');
 
 
SELECT title, released_year FROM books
WHERE released_year >= 2000 
AND released_year % 2 = 1;

CASE STATEMENTS
select title, released_year,
	case when released_year >= 2010 then 'Modern lit'
    else '20th Century Lit'
    end as genre
from books;

select title, stock_quantity,
	case 
    when stock_quantity between 0 and 50 then '*'
    when stock_quantity between 51 and 100 then '* *'
    else '* * *'
    end as stock
from books;

SELECT 
    title,
    stock_quantity,
    CASE
        WHEN stock_quantity <= 40 THEN '*'
        WHEN stock_quantity <= 70 THEN '**'
        WHEN stock_quantity <= 100 THEN '***'
        WHEN stock_quantity <= 140 THEN '****'
        ELSE '*****'
    END AS stock
FROM
    books;

IS NULL
select * from books where title is null

CHALLENGE
select * from books where released_year < 1980;
select * from books where author_lname in ('Eggers','Chabon');
select * from books where author_lname = 'Lahiri' and released_year > 2000;
select * from books where pages between 100 and 200;
select * from books where author_lname like 'C%' or author_lname like 'S%';
select title, author_lname, 
	case
		when title like '%stories%' then 'Short Stories'
        when title like 'Just Kids' or title like 'A Heartbreaking Work%' then 'Memoir'
        else 'Novel'
	end as 'TYPE' from books;
    
select author_fname, author_lname, 
	case
		when count(*) > 1 then concat(count(*),' ','books')
        else concat(count(*),' ','book')
	end as 'COUNT' from books group by author_fname, author_lname;